# MPK options file

# Directories of external packages:
PQPDIR  = $(HOME)/Documents/UFRGS/CMP545/MPK/PQP_v1.2
BALLDIR = $(HOME)/ball

# Configuration options (add to variable DEFS below or remove from
# DEFS to use defaults):
#
# ADAPT_COLLCHECKER
#  Use adaptive segment collision checker (default: simple checker with
#  fixed epsilon-discretization in c-space).  This option affects the
#  SBL planner, the programs in prog/ and the path smoother.
#
# DO_TOLERANCE_TEST
#  Use a static tolerance test (with RSSs) to check for >delta
#  separation at the intermediate configurations (affects only the
#  simple epsilon segment checker).  By default, the simple
#  epsilon-discretization checker uses a static collision test (with
#  OBBs) at the intermediate configurations.
#
# SAVE_MEMORY
#  To compile a version of the adaptive segment checker that uses less
#  memory.  The default version of the checker contains status
#  information that may be useful for test purposes but can be
#  storage consuming when many segment checkers are instantiated (e.g.,
#  in the SBL planner).  Our experience shows that this option is only
#  necessary for very large roadmaps.
#
# TRANSFORM_CACHE
#  Use a transform cache for avoiding redundant forward kinematics
#  computations of the adaptive segment checker.  Currently, this
#  works only with the Unix implementation because we use the STL
#  hash_map.  The Windows implementation of the STL hash_map seems to
#  be incompatible (see file mpkTransformCache.H).  To compile under
#  Windows, do not define the TRANSFORM_CACHE option.
#
# WIN32
#  For compiling with Windows Visual Studio.
#
DEFS =	-DADAPT_COLLCHECKER=1 \
	-DTRANSFORM_CACHE=1 \
	-DMPK_OPTIMIZE_IMPLEMENTED=1

# Compiler and compiler flags:
CC = g++
CFLAGS = -O2 $(DEFS)

# Include paths
INCALL = -I/usr/X11R6/include \
	 -I$(PQPDIR)/src \
	 -I$(BALLDIR)

# Library paths
LIBALL = -L/usr/lib \
	 -L/usr/X11R6/lib \
	 -L$(PQPDIR)/lib \
	 -L$(BALLDIR)
